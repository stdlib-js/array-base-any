{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isComplex128Array = require( '@stdlib/array-base-assert-is-complex128array' );\nvar isComplex64Array = require( '@stdlib/array-base-assert-is-complex64array' );\nvar arraylike2object = require( '@stdlib/array-base-arraylike2object' );\nvar reinterpret128 = require( '@stdlib/strided-base-reinterpret-complex128' );\nvar reinterpret64 = require( '@stdlib/strided-base-reinterpret-complex64' );\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether at least one element in an array is truthy.\n*\n* @private\n* @param {Collection} x - input array\n* @returns {boolean} boolean indicating whether at least one element is truthy\n*\n* @example\n* var x = [ 0, 0, 1, 0 ];\n*\n* var out = internal( x );\n* // returns true\n*\n* @example\n* var x = [ 0, 0, 0, 0 ];\n*\n* var out = internal( x );\n* // returns false\n*/\nfunction internal( x ) {\n\tvar i;\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tif ( x[ i ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n* Tests whether at least one element in a complex number array is truthy.\n*\n* @private\n* @param {Collection} x - underlying data buffer\n* @returns {boolean} boolean indicating whether at least one element is truthy\n*\n* @example\n* var x = [ 0, 0, 1, 0 ];\n*\n* var out = internalComplex( x );\n* // returns true\n*\n* @example\n* var x = [ 1, 2, 0, 0 ];\n*\n* var out = internalComplex( x );\n* // returns true\n*\n* @example\n* var x = [ 0, 0, 0, 0 ];\n*\n* var out = internalComplex( x );\n* // returns false\n*/\nfunction internalComplex( x ) {\n\tvar i;\n\tfor ( i = 0; i < x.length; i += 2 ) {\n\t\tif ( x[ i ] || x[ i+1 ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n* Tests whether at least one element in an array is truthy.\n*\n* @private\n* @param {Object} x - input array object\n* @returns {boolean} boolean indicating whether at least one element is truthy\n*\n* @example\n* var toAccessorArray = require( '@stdlib/array-base-to-accessor-array' );\n* var arraylike2object = require( '@stdlib/array-base-arraylike2object' );\n*\n* var x = arraylike2object( toAccessorArray( [ 0, 0, 1, 0 ] ) );\n*\n* var out = accessors( x );\n* // returns true\n*\n* @example\n* var toAccessorArray = require( '@stdlib/array-base-to-accessor-array' );\n* var arraylike2object = require( '@stdlib/array-base-arraylike2object' );\n*\n* var x = arraylike2object( toAccessorArray( [ 0, 0, 0, 0 ] ) );\n*\n* var out = accessors( x );\n* // returns false\n*/\nfunction accessors( x ) {\n\tvar data;\n\tvar get;\n\tvar i;\n\n\tdata = x.data;\n\tget = x.accessors[ 0 ];\n\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\tif ( get( data, i ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Tests whether at least one element in an array is truthy.\n*\n* @param {Collection} x - input array\n* @returns {boolean} boolean indicating whether at least one element is truthy\n*\n* @example\n* var x = [ 0, 0, 1, 0 ];\n*\n* var out = any( x );\n* // returns true\n*\n* @example\n* var x = [ 0, 0, 0, 0 ];\n*\n* var out = any( x );\n* // returns false\n*/\nfunction any( x ) {\n\tvar obj = arraylike2object( x );\n\tif ( obj.accessorProtocol ) {\n\t\t// If provided a complex number array, reinterpret as a real typed array and test interleaved real and imaginary components, where we consider a complex number to be truthy if at least one component is non-zero...\n\t\tif ( isComplex128Array( x ) ) {\n\t\t\treturn internalComplex( reinterpret128( x, 0 ) );\n\t\t}\n\t\tif ( isComplex64Array( x ) ) {\n\t\t\treturn internalComplex( reinterpret64( x, 0 ) );\n\t\t}\n\t\treturn accessors( obj );\n\t}\n\treturn internal( x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = any;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether at least one element in an array is truthy.\n*\n* @module @stdlib/array-base-any\n*\n* @example\n* var any = require( '@stdlib/array-base-any' );\n*\n* var x = [ 0, 0, 1, 0 ];\n*\n* var out = any( x );\n* // returns true\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAoB,QAAS,8CAA+C,EAC5EC,EAAmB,QAAS,6CAA8C,EAC1EC,EAAmB,QAAS,qCAAsC,EAClEC,EAAiB,QAAS,6CAA8C,EACxEC,EAAgB,QAAS,4CAA6C,EAwB1E,SAASC,EAAUC,EAAI,CACtB,IAAIC,EACJ,IAAMA,EAAI,EAAGA,EAAID,EAAE,OAAQC,IAC1B,GAAKD,EAAGC,CAAE,EACT,MAAO,GAGT,MAAO,EACR,CA2BA,SAASC,EAAiBF,EAAI,CAC7B,IAAIC,EACJ,IAAMA,EAAI,EAAGA,EAAID,EAAE,OAAQC,GAAK,EAC/B,GAAKD,EAAGC,CAAE,GAAKD,EAAGC,EAAE,CAAE,EACrB,MAAO,GAGT,MAAO,EACR,CA2BA,SAASE,EAAWH,EAAI,CACvB,IAAII,EACAC,EACAJ,EAKJ,IAHAG,EAAOJ,EAAE,KACTK,EAAML,EAAE,UAAW,CAAE,EAEfC,EAAI,EAAGA,EAAIG,EAAK,OAAQH,IAC7B,GAAKI,EAAKD,EAAMH,CAAE,EACjB,MAAO,GAGT,MAAO,EACR,CAuBA,SAASK,EAAKN,EAAI,CACjB,IAAIO,EAAMX,EAAkBI,CAAE,EAC9B,OAAKO,EAAI,iBAEHb,EAAmBM,CAAE,EAClBE,EAAiBL,EAAgBG,EAAG,CAAE,CAAE,EAE3CL,EAAkBK,CAAE,EACjBE,EAAiBJ,EAAeE,EAAG,CAAE,CAAE,EAExCG,EAAWI,CAAI,EAEhBR,EAAUC,CAAE,CACpB,CAKAP,EAAO,QAAUa,IC3IjB,IAAIE,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isComplex128Array", "isComplex64Array", "arraylike2object", "reinterpret128", "reinterpret64", "internal", "x", "i", "internalComplex", "accessors", "data", "get", "any", "obj", "main"]
}
